package com.transam.backoffice.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RouteScheduleAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRouteScheduleAllPropertiesEquals(RouteSchedule expected, RouteSchedule actual) {
        assertRouteScheduleAutoGeneratedPropertiesEquals(expected, actual);
        assertRouteScheduleAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRouteScheduleAllUpdatablePropertiesEquals(RouteSchedule expected, RouteSchedule actual) {
        assertRouteScheduleUpdatableFieldsEquals(expected, actual);
        assertRouteScheduleUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRouteScheduleAutoGeneratedPropertiesEquals(RouteSchedule expected, RouteSchedule actual) {
        assertThat(actual)
            .as("Verify RouteSchedule auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRouteScheduleUpdatableFieldsEquals(RouteSchedule expected, RouteSchedule actual) {
        assertThat(actual)
            .as("Verify RouteSchedule relevant properties")
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getDeparture()).as("check departure").isEqualTo(expected.getDeparture()))
            .satisfies(a -> assertThat(a.getArrival()).as("check arrival").isEqualTo(expected.getArrival()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRouteScheduleUpdatableRelationshipsEquals(RouteSchedule expected, RouteSchedule actual) {
        assertThat(actual)
            .as("Verify RouteSchedule relationships")
            .satisfies(a -> assertThat(a.getRoute()).as("check route").isEqualTo(expected.getRoute()));
    }
}
